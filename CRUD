/* HTML */
!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CRUD Operations</title>
  <link rel="stylesheet" href="crudc.css">
</head>
<body>
  <div class="container">
    <h1>CRUD Operations with HTML, CSS, and JavaScript</h1>

    <!-- Form for Adding/Updating Records -->
    <form id="crud-form">
      <input type="hidden" id="record-id">
      <label for="name">Name:</label>
      <input type="text" id="name" placeholder="Enter name" required>
      <label for="age">Age:</label>
      <input type="number" id="age" placeholder="Enter age" required>
      <label for="city">City:</label>
      <input type="city" id="city" placeholder="Enter city" required>

      <button class="f-btn" type="submit" id="submit-btn">Add Record</button>
    </form>

    <!-- Display Table -->
    <table>
      <thead>
        <tr>
          <th>ID</th>
          <th>Name</th>
          <th>Age</th>
          <th>City</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="table-body">
        <!-- Rows will be dynamically inserted -->
      </tbody>
    </table>
  </div>
  <script src="crud.js"></script>
</body>
</html>

/* CSS */
body {
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f4f9;
}

.container {
  max-width: 800px;
  margin: 50px auto;
  padding: 20px;
  background: white;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

h1 {
  text-align: center;
  color: #333;
}

form {
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-bottom: 20px;
}

input, button {
  padding: 10px;
  border: 1px solid #ddd;
  border-radius: 5px;
}

/*button{
  background-color: #28a745;
  color: white;
  border: none;
  cursor: pointer;
}*/

.f-btn{
  background-color: #303ce4;
  width: 500px;
  margin-left:200px ;
  color: white;
  border: none;
  cursor: pointer;
}*/

button:hover {
  background-color: #218838;
}

table {
  width: 100%;
  border-collapse: collapse;
}

table th, table td {
  padding: 10px;
  border: 1px solid #ddd;
  text-align: center;
}

table th {
  background-color: #f8f9fa;
}


.action-btn {
  padding: 5px 10px;
  color: white;
  border: none;
  cursor: pointer;
  border-radius: 3px;
  display: inline-block;
}

table tr:nth-child(odd){
  background-color:#fff7b3 ;
}

table tr:nth-child(even){
  background-color: white;
}

.edit-btn {
  background-color: #007bff;
}

.delete-btn {
  background-color: #dc3545;
}

.edit-btn:hover {
  background-color: #0056b3;
}

.delete-btn:hover {
  background-color: #c82333;
}

/* JAVASCRIPT */
// Data Array to Store Records
let data = [];
let editId = null;

// Selectors
const form = document.getElementById('crud-form');
const nameInput = document.getElementById('name');
const ageInput = document.getElementById('age');
const cityInput = document.getElementById('city');
const tableBody = document.getElementById('table-body');
const submitBtn = document.getElementById('submit-btn');

// Add or Update Record
form.addEventListener('submit', function (e) {
  e.preventDefault();

  const name = nameInput.value.trim();
  const age = ageInput.value.trim();
  const city = cityInput.value.trim();

  if (editId) {
    // Update Record
    const record = data.find((item) => item.id === editId);
    record.name = name;
    record.age = age;
    record.city = city;
    editId = null;
    submitBtn.textContent = "Add Record";
  } else {
    // Create Record
    const newRecord = {
      id: Date.now(),
      name,
      age,
      city,
    };
    data.push(newRecord);
  }

  renderTable();
  form.reset();
});

// Render Table
function renderTable() {
  tableBody.innerHTML = '';
  data.forEach((item) => {
    const row = document.createElement('tr');

    row.innerHTML = `
      <td>${item.id}</td>
      <td>${item.name}</td>
      <td>${item.age}</td>
      <td>${item.city}</td>
      <td>
        <button class="action-btn edit-btn" onclick="editRecord(${item.id})">Edit</button>
        <button class="action-btn delete-btn" onclick="deleteRecord(${item.id})">Delete</button>
      </td>
    `;

    tableBody.appendChild(row);
  });
}

// Edit Record
function editRecord(id) {
  const record = data.find((item) => item.id === id);
  nameInput.value = record.name;
  ageInput.value = record.age;
  cityInput.value = record.city;

  editId = id;
  submitBtn.textContent = "Update Record";
}

// Delete Record
function deleteRecord(id) {
  data = data.filter((item) => item.id !== id);
  renderTable();
}

// Initial Render
renderTable();

----------*--------
----------*---------
